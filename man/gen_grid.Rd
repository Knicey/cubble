% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grid.R
\name{gen_grid}
\alias{gen_grid}
\title{Generate geofacet grid based on long and lat}
\usage{
gen_grid(data, var = NULL, nrow = NULL, ncol = NULL)
}
\arguments{
\item{data}{a cubble object}

\item{var}{the facet variable}

\item{nrow}{number of row in the facet}

\item{ncol}{number of column in the facet}
}
\description{
This function automatically generates a grid for \code{\link[geofacet]{facet_geo}}
based on longitude and latitude.
}
\examples{
library(lubridate)
library(cubble)
library(ggplot2)
library(geofacet)
library(dplyr)

short <- climate_small \%>\%
  dplyr::slice_tail(n = 15) \%>\%
  # a temporary fix for unnest tsibble
  mutate(ts = list(as_tibble(ts)))

# generate the grid
grid1 <- short \%>\% gen_grid(var = name)

make_plot <- function(grid_supplied){
  short \%>\%
    stretch() \%>\%
    migrate(name) \%>\%
    dplyr::filter(year(date) == 2020, month(date) == 1) \%>\%
    ggplot(aes(x = date, y= tmax, group = name)) +
    geom_line() +
    facet_geo(vars(name), grid = grid_supplied)
 }

# make the plot with grid1
make_plot(grid1)

# manually modify the position of hobart airport in the grid
grid2 <- grid1 \%>\%
  mutate(row = ifelse(name == "hobart airport", 8, row),
         col = ifelse(name == "hobart airport", 3, col))

# make the same plot based on grid2
make_plot(grid2)

}
