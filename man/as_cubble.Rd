% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_cubble.R
\name{as_cubble}
\alias{as_cubble}
\alias{as_cubble.list}
\alias{as_cubble.tbl_df}
\alias{as_cubble.rowwise_df}
\alias{as_cubble.sf}
\alias{as_cubble.ncdf4}
\alias{as_cubble.stars}
\alias{as_cubble.sftime}
\title{Coerce foreign objects into a cubble object}
\usage{
as_cubble(data, key, index, coords, ...)

\method{as_cubble}{list}(data, key, index, coords, by = NULL, ...)

\method{as_cubble}{tbl_df}(data, key, index, coords, ...)

\method{as_cubble}{rowwise_df}(data, key, index, coords, ...)

\method{as_cubble}{sf}(data, key, index, ...)

\method{as_cubble}{ncdf4}(
  data,
  key,
  index,
  coords,
  vars,
  lat_range = NULL,
  long_range = NULL,
  ...
)

\method{as_cubble}{stars}(data, key, index, coords, ...)

\method{as_cubble}{sftime}(data, key, index, coords, ...)
}
\arguments{
\item{data}{object to be converted into an object of class \code{cubble_df}}

\item{key}{the spatial identifying variable(s), it can be a single variable, i.e.
\code{key = id}, or a vector of two variables: \code{key = c(cluster, id)}
(see the example in \link{switch_key})}

\item{index}{the single temporal identifying variable, currently support
base R classes \code{Date}, \code{POSIXlt}, \code{POSIXct} and
tsibble's \code{yearmonth}, \code{yearweek}, and \code{yearquarter} class}

\item{coords}{the coordinate columns, in the form of \code{c(LONGITUDE, LATITUDE)}
the argument can be omitted if created from an sf and its subclasses.
In the case that the sf geometry column is not POINT, cubble will use the centroid
coordinates as LONGITUDE and LATITUDE}

\item{...}{other arguments}

\item{by}{used in \code{as_cubble.list()} when the key variable has different names in the
spatial and temporal data, in the syntax of the \code{by} argument in \code{left_join}  (see examples)}

\item{vars}{used in \code{as_cubble.netcdf()} to select the variable to read in,
use \code{c()} for multiple variables (see examples)}

\item{lat_range, long_range}{used in \code{as_cubble.netcdf()} to downsample the data to read,
specify in the syntax of \code{seq(FROM, TO, BY)}(see examples)}
}
\value{
a cubble object
}
\description{
Coerce foreign objects into a cubble object
}
\examples{
climate_flat \%>\% as_cubble(key = id, index = date, coords = c(long, lat))

# stations and climate are in-built data in cubble
library(dplyr)
as_cubble(data = list(spatial = stations, temporal = climate),
         key = id, index = date, coords = c(long, lat))

# when the key variable is named differently, use the `by` argument,
# cubble will take the name from TODO
climate2 <- climate \%>\% rename(station = id)
as_cubble(data = list(spatial = stations, temporal = climate2),
          by = c("id" = "station"), key = id,
          index = date, coords = c(long, lat))

# If the data is already in a rowwise_df:
dt <- climate_flat \%>\%
  tidyr::nest(ts = date:tmin) \%>\%
  dplyr::rowwise()
dt \%>\%  as_cubble(key = id, index = date, coords = c(long, lat))

# only need `coords` if create from a tsibble
dt <- climate_flat \%>\%  tsibble::as_tsibble(key = id, index = date)
dt \%>\%  as_cubble(coords = c(long, lat))

# netcdf
path <- system.file("ncdf/era5-pressure.nc", package = "cubble")
raw <- ncdf4::nc_open(path)
dt <- as_cubble(raw, vars = c("q", "z"))
# read at every degree
dt <- as_cubble(raw,vars = c("q", "z"),
                long_range = seq(113, 153, 1),
                lat_range = seq(-53, -12, 1))

# stars
dt <- stars::read_ncdf(path)
dt \%>\% as_cubble()

# don't have to supply coords if create from a sftime
dt <- climate_flat \%>\%
  filter(lubridate::day(date) <= 5, lubridate::month(date) == 1) \%>\%
  sf::st_as_sf(coords = c("long", "lat"), crs = sf::st_crs("OGC:CRS84")) \%>\%
  sftime::st_as_sftime()
dt \%>\% as_cubble(key = id, index = date)
}
