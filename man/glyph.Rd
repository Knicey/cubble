% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/glyph.R
\name{glyph_pixel}
\alias{glyph_pixel}
\alias{quality_map}
\title{Function to create a glyph dataset and plot with maps}
\usage{
glyph_pixel(data, x_major, y_major, var, gvar, width = ggplot2::rel(0.7))

quality_map(data, type = c("ggplot", "interactive"))
}
\arguments{
\item{data}{for \code{glyph_pixel}, a data object; for \code{glyph_map},
a data of class "glyphplot", created by \code{glyph_pixel()} or \code{GGally::glyph()}}

\item{x_major}{the main x axis}

\item{y_major}{the main y axis}

\item{var}{the variable that contains all the variable names, in the long form}

\item{gvar}{the grouping variable}

\item{width}{the width adjustment}

\item{type}{either a static or interactive plot}
}
\description{
Function to create a glyph dataset and plot with maps
}
\examples{
# create a tibble object
climate_2020 <- oz_climate \%>\%
                  dplyr::filter(lubridate::year(date) == 2020)

# add missing summaries
out <- climate_2020 \%>\%
         global(station) \%>\%
         add_missing_prct(prcp:tmin) \%>\%
         add_missing_dscrb() \%>\%
         tidyr::pivot_longer(cols = c(ends_with("missing"), ends_with("dscrb")),
                             names_to = c("var", ".value"), names_pattern ="(.*)_(.*)")

# create a glyphplot dataset with `glyph_pixel`
glyph_df <- glyph_pixel(out,
                        x_major = long,
                        y_major = lat,
                        var = "var",
                        gvar = "station")

# create the glyph plot
quality_map(glyph_df, type = "ggplot")
quality_map(glyph_df, type = "interactive")
}
\references{
\code{glyph_pixel} is inspired by the \code{glyph} function in the package GGally:
https://github.com/ggobi/ggally/blob/master/R/gglyph.R
}
